<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--注册springMVC的核心对象DispatcherServlet
        在tomcat就创建DispatcherServlet对象实例
           为什么要创建？
                因为DispatcherServlet在他的创建过程中, 会同时创建springMVC容器对象读取springMVC的配置文件,
                把这个配置文件中的对象都创建好,当用户发起请求时就可以直接使用对象了。
    -->
    <servlet>
        <!--这个servlet作用是用来创建springMVC 容器对象的-->
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--
            启动tomcat报错,读取这个文件/WEB-INF/springmvc-servlet.xml (/WEB-INF/dispatcherServlet-servlet.xml
            springMVC创建容器对象时,读取的配置文件默认是/NEB-INF/<servlet-name>-servlet.xml
            现在我们指定springMVC配置文件的位置通过init-param标签指定
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--指定springMVC的配置文件的位置-->
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
        <!--设置在tomcat启动或就创建servlet，load-on-startup表示首先加载，数字>=0加载-->
        <load-on-startup>1</load-on-startup>
    </servlet>


    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--
            url-pattern>有两种方式：
                            1,*.do\*.action\*.mvc
                            2, /
        -->
        <!--    <url-pattern>*.do</url-pattern>-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--配置springMVC的编码过滤器-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


</web-app>